[
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "chantier.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "chantier.models",
        "description": "chantier.models",
        "detail": "chantier.models",
        "documentation": {}
    },
    {
        "label": "BonCommande",
        "importPath": "chantier.models",
        "description": "chantier.models",
        "isExtraImport": true,
        "detail": "chantier.models",
        "documentation": {}
    },
    {
        "label": "ListeMateriaux",
        "importPath": "chantier.models",
        "description": "chantier.models",
        "isExtraImport": true,
        "detail": "chantier.models",
        "documentation": {}
    },
    {
        "label": "PartieChantier",
        "importPath": "chantier.models",
        "description": "chantier.models",
        "isExtraImport": true,
        "detail": "chantier.models",
        "documentation": {}
    },
    {
        "label": "Chantier",
        "importPath": "chantier.models",
        "description": "chantier.models",
        "isExtraImport": true,
        "detail": "chantier.models",
        "documentation": {}
    },
    {
        "label": "get_random_string",
        "importPath": "django.utils.crypto",
        "description": "django.utils.crypto",
        "isExtraImport": true,
        "detail": "django.utils.crypto",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "FilterSet",
        "importPath": "django_filters.rest_framework",
        "description": "django_filters.rest_framework",
        "isExtraImport": true,
        "detail": "django_filters.rest_framework",
        "documentation": {}
    },
    {
        "label": "DateFilter",
        "importPath": "django_filters.rest_framework",
        "description": "django_filters.rest_framework",
        "isExtraImport": true,
        "detail": "django_filters.rest_framework",
        "documentation": {}
    },
    {
        "label": "CharFilter",
        "importPath": "django_filters.rest_framework",
        "description": "django_filters.rest_framework",
        "isExtraImport": true,
        "detail": "django_filters.rest_framework",
        "documentation": {}
    },
    {
        "label": "DjangoFilterBackend",
        "importPath": "django_filters.rest_framework",
        "description": "django_filters.rest_framework",
        "isExtraImport": true,
        "detail": "django_filters.rest_framework",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "BonCommandeFilter",
        "importPath": "chantier.filters",
        "description": "chantier.filters",
        "isExtraImport": true,
        "detail": "chantier.filters",
        "documentation": {}
    },
    {
        "label": "ListeMateriauxFilter",
        "importPath": "chantier.filters",
        "description": "chantier.filters",
        "isExtraImport": true,
        "detail": "chantier.filters",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "BonCommandeViewSet",
        "importPath": "chantier.views",
        "description": "chantier.views",
        "isExtraImport": true,
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "ChantierBonCommandeViewSet",
        "importPath": "chantier.views",
        "description": "chantier.views",
        "isExtraImport": true,
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "ChantierViewSet",
        "importPath": "chantier.views",
        "description": "chantier.views",
        "isExtraImport": true,
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "ListeMateriauxViewSet",
        "importPath": "chantier.views",
        "description": "chantier.views",
        "isExtraImport": true,
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "OptionMateriauViewSet",
        "importPath": "chantier.views",
        "description": "chantier.views",
        "isExtraImport": true,
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chantier.migrations.0001_initial",
        "description": "chantier.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Chantier',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('numero', models.CharField(max_length=50, unique=True)),",
        "detail": "chantier.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chantier.migrations.0002_remove_boncommande_chantier_and_more",
        "description": "chantier.migrations.0002_remove_boncommande_chantier_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chantier', '0001_initial'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='boncommande',\n            name='chantier',\n        ),\n        migrations.RemoveField(",
        "detail": "chantier.migrations.0002_remove_boncommande_chantier_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chantier.migrations.0003_remove_materiauboncommande_unite",
        "description": "chantier.migrations.0003_remove_materiauboncommande_unite",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chantier', '0002_remove_boncommande_chantier_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='materiauboncommande',\n            name='unite',\n        ),\n    ]",
        "detail": "chantier.migrations.0003_remove_materiauboncommande_unite",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chantier.migrations.0004_optionmateriau_partiechantier_unique_partie_per_type_and_more",
        "description": "chantier.migrations.0004_optionmateriau_partiechantier_unique_partie_per_type_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chantier', '0003_remove_materiauboncommande_unite'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='OptionMateriau',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('valeur', models.CharField(max_length=20)),",
        "detail": "chantier.migrations.0004_optionmateriau_partiechantier_unique_partie_per_type_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chantier.migrations.0005_materiauboncommande_option",
        "description": "chantier.migrations.0005_materiauboncommande_option",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chantier', '0004_optionmateriau_partiechantier_unique_partie_per_type_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='materiauboncommande',\n            name='option',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='materiau_bon_commandes', to='chantier.optionmateriau'),\n        ),",
        "detail": "chantier.migrations.0005_materiauboncommande_option",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chantier.migrations.0006_listemateriaux_code",
        "description": "chantier.migrations.0006_listemateriaux_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chantier', '0005_materiauboncommande_option'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='listemateriaux',\n            name='code',\n            field=models.CharField(max_length=10, null=True, unique=True),\n        ),",
        "detail": "chantier.migrations.0006_listemateriaux_code",
        "documentation": {}
    },
    {
        "label": "set_default_codes",
        "kind": 2,
        "importPath": "chantier.migrations.0006_listemateriaux_code",
        "description": "chantier.migrations.0006_listemateriaux_code",
        "peekOfCode": "def set_default_codes(apps, schema_editor):\n    ListeMateriaux = apps.get_model(\"chantier\", \"ListeMateriaux\")\n    for materiau in ListeMateriaux.objects.all():\n        # Génère un code aléatoire unique\n        unique_code = get_random_string(8)\n        while ListeMateriaux.objects.filter(code=unique_code).exists():\n            unique_code = get_random_string(8)  # Assure unicité\n        materiau.code = unique_code\n        materiau.save()\nclass Migration(migrations.Migration):",
        "detail": "chantier.migrations.0006_listemateriaux_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chantier.migrations.0007_remove_listemateriaux_unite",
        "description": "chantier.migrations.0007_remove_listemateriaux_unite",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chantier', '0006_listemateriaux_code'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='listemateriaux',\n            name='unite',\n        ),\n    ]",
        "detail": "chantier.migrations.0007_remove_listemateriaux_unite",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chantier.migrations.0008_optionmateriau_unique_materiau_valeur",
        "description": "chantier.migrations.0008_optionmateriau_unique_materiau_valeur",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chantier', '0007_remove_listemateriaux_unite'),\n    ]\n    operations = [\n        migrations.AddConstraint(\n            model_name='optionmateriau',\n            constraint=models.UniqueConstraint(fields=('materiau', 'valeur'), name='unique_materiau_valeur'),\n        ),\n    ]",
        "detail": "chantier.migrations.0008_optionmateriau_unique_materiau_valeur",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chantier.migrations.0009_paiement_boncommande_paiement",
        "description": "chantier.migrations.0009_paiement_boncommande_paiement",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chantier', '0008_optionmateriau_unique_materiau_valeur'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Paiement',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('type_paiement', models.CharField(choices=[('espece', 'Espèces'), ('cheque', 'Chèque')], max_length=10)),",
        "detail": "chantier.migrations.0009_paiement_boncommande_paiement",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chantier.migrations.0010_remove_optionmateriau_unique_materiau_valeur_and_more",
        "description": "chantier.migrations.0010_remove_optionmateriau_unique_materiau_valeur_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chantier', '0009_paiement_boncommande_paiement'),\n    ]\n    operations = [\n        migrations.RemoveConstraint(\n            model_name='optionmateriau',\n            name='unique_materiau_valeur',\n        ),\n        migrations.AddField(",
        "detail": "chantier.migrations.0010_remove_optionmateriau_unique_materiau_valeur_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chantier.migrations.0011_optionmateriau_name_alter_optionmateriau_type",
        "description": "chantier.migrations.0011_optionmateriau_name_alter_optionmateriau_type",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chantier', '0010_remove_optionmateriau_unique_materiau_valeur_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='optionmateriau',\n            name='name',\n            field=models.CharField(max_length=50, null=True),\n        ),",
        "detail": "chantier.migrations.0011_optionmateriau_name_alter_optionmateriau_type",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chantier.migrations.0012_alter_optionmateriau_name",
        "description": "chantier.migrations.0012_alter_optionmateriau_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chantier', '0011_optionmateriau_name_alter_optionmateriau_type'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='optionmateriau',\n            name='name',\n            field=models.CharField(blank=True, max_length=50, null=True),\n        ),",
        "detail": "chantier.migrations.0012_alter_optionmateriau_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "chantier.migrations.0013_alter_boncommande_paiement",
        "description": "chantier.migrations.0013_alter_boncommande_paiement",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('chantier', '0012_alter_optionmateriau_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='boncommande',\n            name='paiement',\n            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bons_commande', to='chantier.paiement'),\n        ),",
        "detail": "chantier.migrations.0013_alter_boncommande_paiement",
        "documentation": {}
    },
    {
        "label": "ChantierConfig",
        "kind": 6,
        "importPath": "chantier.apps",
        "description": "chantier.apps",
        "peekOfCode": "class ChantierConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'chantier'",
        "detail": "chantier.apps",
        "documentation": {}
    },
    {
        "label": "BonCommandeFilter",
        "kind": 6,
        "importPath": "chantier.filters",
        "description": "chantier.filters",
        "peekOfCode": "class BonCommandeFilter(FilterSet):\n    date_min = DateFilter(field_name=\"date\", lookup_expr='gte')  # Date après ou égale\n    date_max = DateFilter(field_name=\"date\", lookup_expr='lte')  # Date avant ou égale\n    reference = CharFilter(method='filter_reference')  # Recherche avancée par référence\n    chantier = CharFilter(method='filter_chantier')  # Filtrer par ID ou nom du chantier\n    partie_type = CharFilter(field_name=\"partie__type\")  # Filtrer par type de partie (gros œuvre ou finition)\n    class Meta:\n        model = BonCommande\n        fields = ['date', 'reference', 'chantier', 'partie_type']\n    def filter_reference(self, queryset, name, value):",
        "detail": "chantier.filters",
        "documentation": {}
    },
    {
        "label": "ListeMateriauxFilter",
        "kind": 6,
        "importPath": "chantier.filters",
        "description": "chantier.filters",
        "peekOfCode": "class ListeMateriauxFilter(FilterSet):\n    type = CharFilter(method='filter_type')  # 'iexact' pour comparaison insensible à la casse\n    nom = CharFilter(field_name='name', lookup_expr='icontains') \n    class Meta:\n        model = ListeMateriaux\n        fields = ['type','nom']\n    def filter_type(self, queryset, name, value):\n        # Permet de filtrer par ID ou nom de chantier\n        return queryset.filter(\n           Q(type__iexact=value)  | Q(type__iexact=\"main_doeuvre\") ",
        "detail": "chantier.filters",
        "documentation": {}
    },
    {
        "label": "Chantier",
        "kind": 6,
        "importPath": "chantier.models",
        "description": "chantier.models",
        "peekOfCode": "class Chantier(models.Model):\n    numero = models.CharField(max_length=50, unique=True)\n    nom = models.CharField(max_length=100, blank=True)\n    @property\n    def cout_total_materiaux(self):\n        # Somme des coûts des matériaux pour toutes les parties du chantier\n        return sum(partie.cout_total_materiaux for partie in self.parties.all())\n    @property\n    def cout_total_main_oeuvre(self):\n        # Somme des coûts de la main-d'œuvre pour toutes les parties du chantier",
        "detail": "chantier.models",
        "documentation": {}
    },
    {
        "label": "PartieChantier",
        "kind": 6,
        "importPath": "chantier.models",
        "description": "chantier.models",
        "peekOfCode": "class PartieChantier(models.Model):\n    CHOICES_TYPE = [\n        ('gros_oeuvre', 'Gros œuvre'),\n        ('finition', 'Finition'),\n    ]\n    chantier = models.ForeignKey(Chantier, on_delete=models.CASCADE, related_name='parties')\n    type = models.CharField(max_length=20, choices=CHOICES_TYPE)\n    class Meta:\n        constraints = [\n            models.UniqueConstraint(fields=['chantier', 'type'], name='unique_partie_per_type')",
        "detail": "chantier.models",
        "documentation": {}
    },
    {
        "label": "ListeMateriaux",
        "kind": 6,
        "importPath": "chantier.models",
        "description": "chantier.models",
        "peekOfCode": "class ListeMateriaux(models.Model):\n    TYPE_CHOICES = [\n        ('gros_oeuvre', 'Gros œuvre'),\n        ('finition', 'Finition'),\n        ('main_doeuvre', 'Main d’œuvre'),\n    ]\n    name = models.CharField(max_length=50)\n    code = models.CharField(max_length=10,null=True, unique=True) \n    type = models.CharField(max_length=20, choices=TYPE_CHOICES) \n    def __str__(self):",
        "detail": "chantier.models",
        "documentation": {}
    },
    {
        "label": "OptionMateriau",
        "kind": 6,
        "importPath": "chantier.models",
        "description": "chantier.models",
        "peekOfCode": "class OptionMateriau(models.Model):\n    name=models.CharField(max_length=50,null=True, blank=True)\n    materiau = models.ForeignKey(ListeMateriaux, related_name='options', on_delete=models.CASCADE)  # Lien avec le matériau\n    valeur = models.CharField(max_length=20)  # Option spécifique (ex : 45, 55)\n    TYPE_CHOICES = [\n        ('gros_oeuvre', 'Gros œuvre'),\n        ('finition', 'Finition'),\n        ('main_doeuvre', 'Main d’œuvre'),\n    ]\n    type = models.CharField(max_length=20, choices=TYPE_CHOICES) ",
        "detail": "chantier.models",
        "documentation": {}
    },
    {
        "label": "Paiement",
        "kind": 6,
        "importPath": "chantier.models",
        "description": "chantier.models",
        "peekOfCode": "class Paiement(models.Model):\n    TYPE_CHOICES = [\n        ('espece', 'Espèces'),\n        ('cheque', 'Chèque'),\n    ]\n    type_paiement = models.CharField(max_length=10, choices=TYPE_CHOICES)\n    date_paiement = models.DateField(auto_now_add=True)\n    numero_cheque = models.CharField(\n        max_length=50,\n        null=True,",
        "detail": "chantier.models",
        "documentation": {}
    },
    {
        "label": "BonCommande",
        "kind": 6,
        "importPath": "chantier.models",
        "description": "chantier.models",
        "peekOfCode": "class BonCommande(models.Model):\n    TYPE_CHOICES = [\n        ('gros_oeuvre', 'Gros Œuvre'),\n        ('finition', 'Finition'),\n    ]\n    reference = models.CharField(max_length=100, unique=True)\n    date = models.DateField()\n    # Default value for 'type'\n    type = models.CharField(max_length=20, choices=TYPE_CHOICES, default='gros_oeuvre')  # Provide a default value here\n    # Define the 'partie' ForeignKey with a default value",
        "detail": "chantier.models",
        "documentation": {}
    },
    {
        "label": "MateriauBonCommande",
        "kind": 6,
        "importPath": "chantier.models",
        "description": "chantier.models",
        "peekOfCode": "class MateriauBonCommande(models.Model):\n    bon_commande = models.ForeignKey(BonCommande, on_delete=models.CASCADE, related_name='materiaux')\n    materiau = models.ForeignKey(ListeMateriaux, null=True, blank=True, on_delete=models.SET_NULL)\n    quantite = models.DecimalField(max_digits=10, decimal_places=2)\n    prix_unitaire = models.DecimalField(max_digits=10, decimal_places=2,default=100)\n    option = models.ForeignKey(\n        OptionMateriau, \n        null=True, \n        blank=True, \n        on_delete=models.SET_NULL, ",
        "detail": "chantier.models",
        "documentation": {}
    },
    {
        "label": "OptionMateriauSerializer",
        "kind": 6,
        "importPath": "chantier.serializers",
        "description": "chantier.serializers",
        "peekOfCode": "class OptionMateriauSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = OptionMateriau\n        fields = ['id','name','valeur','type','materiau']\n    def create(self, validated_data):\n        materiau = validated_data.get('materiau')  # Vérifier si le materiau est dans les données validées\n        if not materiau:\n            raise serializers.ValidationError(\"Le champ 'materiau' est requis.\")\n        # Créer l'option et l'associer au materiau\n        option = OptionMateriau.objects.create(**validated_data)",
        "detail": "chantier.serializers",
        "documentation": {}
    },
    {
        "label": "ListeMateriauxSerializer",
        "kind": 6,
        "importPath": "chantier.serializers",
        "description": "chantier.serializers",
        "peekOfCode": "class ListeMateriauxSerializer(serializers.ModelSerializer):\n    options = OptionMateriauSerializer(many=True, read_only=True)\n    class Meta:\n        model = ListeMateriaux\n        fields = ['id', 'code', 'name', 'type', 'options']\n    def update(self, instance, validated_data):\n        options_data = validated_data.pop('options', [])\n        # Mettre à jour les autres champs de ListeMateriaux\n        instance = super().update(instance, validated_data)\n        # Mettre à jour les options",
        "detail": "chantier.serializers",
        "documentation": {}
    },
    {
        "label": "ChantierSerializer",
        "kind": 6,
        "importPath": "chantier.serializers",
        "description": "chantier.serializers",
        "peekOfCode": "class ChantierSerializer(serializers.ModelSerializer):\n    cout_total_materiaux = serializers.ReadOnlyField()\n    cout_total_main_oeuvre = serializers.ReadOnlyField()\n    cout_total_materiaux_finition = serializers.ReadOnlyField()\n    cout_total_materiaux_gros_oeuvre = serializers.ReadOnlyField()\n    cout_total_main_oeuvre_gros_oeuvre = serializers.ReadOnlyField()\n    cout_total_main_oeuvre_finition = serializers.ReadOnlyField()\n    cout_total_global = serializers.SerializerMethodField()\n    # cout_total_espece = serializers.ReadOnlyField()\n    # cout_total_global = serializers.ReadOnlyField()",
        "detail": "chantier.serializers",
        "documentation": {}
    },
    {
        "label": "PaiementSerializer",
        "kind": 6,
        "importPath": "chantier.serializers",
        "description": "chantier.serializers",
        "peekOfCode": "class PaiementSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Paiement\n        fields = ['id', 'type_paiement', 'date_paiement', 'numero_cheque', 'nom_banque']\n    def validate(self, data):\n        if data['type_paiement'] == 'cheque':\n            if not data.get('numero_cheque'):\n                raise serializers.ValidationError(\"Le numéro de chèque est requis pour un paiement par chèque.\")\n            if not data.get('nom_banque'):\n                raise serializers.ValidationError(\"Le nom de la banque est requis pour un paiement par chèque.\")",
        "detail": "chantier.serializers",
        "documentation": {}
    },
    {
        "label": "PartieChantierSerializer",
        "kind": 6,
        "importPath": "chantier.serializers",
        "description": "chantier.serializers",
        "peekOfCode": "class PartieChantierSerializer(serializers.ModelSerializer):\n    cout_total_materiaux = serializers.DecimalField(max_digits=10, decimal_places=2, read_only=True)\n    cout_total_main_oeuvre = serializers.DecimalField(max_digits=10, decimal_places=2, read_only=True)\n    cout_total_chantier_materiaux_finition = serializers.DecimalField(max_digits=10, decimal_places=2, read_only=True)\n    cout_total_chantier_materiaux_gros_oeuvre = serializers.DecimalField(max_digits=10, decimal_places=2, read_only=True)\n    cout_total_main_oeuvre_finition  = serializers.DecimalField(max_digits=10, decimal_places=2, read_only=True) \n    cout_total_main_oeuvre_gros_oeuvre  = serializers.DecimalField(max_digits=10, decimal_places=2, read_only=True)\n    # cout_total_espece  = serializers.DecimalField(max_digits=10, decimal_places=2, read_only=True)\n    # cout_total_cheque  = serializers.DecimalField(max_digits=10, decimal_places=2, read_only=True)\n    class Meta:",
        "detail": "chantier.serializers",
        "documentation": {}
    },
    {
        "label": "MateriauBonCommandeSerializer",
        "kind": 6,
        "importPath": "chantier.serializers",
        "description": "chantier.serializers",
        "peekOfCode": "class MateriauBonCommandeSerializer(serializers.ModelSerializer):\n    materiau = serializers.CharField(required=False)\n    materiau_name = serializers.CharField(source='materiau.name', read_only=True)\n    type_materiau = serializers.CharField(source='materiau.type', read_only=True)\n    code = serializers.CharField(source='materiau.code', read_only=True)\n    cout_total = serializers.DecimalField(max_digits=10, decimal_places=2, read_only=True)\n    prix_unitaire = serializers.DecimalField(max_digits=10, decimal_places=2, read_only=True)\n    option = serializers.SerializerMethodField()\n    # option_code =   serializers.CharField(source='option.valeur', read_only=True)\n    class Meta:",
        "detail": "chantier.serializers",
        "documentation": {}
    },
    {
        "label": "BonCommandeSerializer",
        "kind": 6,
        "importPath": "chantier.serializers",
        "description": "chantier.serializers",
        "peekOfCode": "class BonCommandeSerializer(serializers.ModelSerializer):\n    materiaux = MateriauBonCommandeSerializer(many=True, read_only=True)\n    paiement = PaiementSerializer()\n    cout_total_materiaux = serializers.DecimalField(max_digits=10, decimal_places=2, read_only=True)\n    cout_total_main_oeuvre = serializers.DecimalField(max_digits=10, decimal_places=2, read_only=True)\n    cout_total_global_BC = serializers.DecimalField(max_digits=10, decimal_places=2, read_only=True)\n    chantier_id = serializers.CharField(source='partie.chantier.id', read_only=True)\n    chantier_name = serializers.CharField(source='partie.chantier.nom', read_only=True)\n    chantier_numero = serializers.CharField(source='partie.chantier.numero', read_only=True)\n    cout_total_chantier_materiaux = serializers.DecimalField(max_digits=10, decimal_places=2,source='partie.chantier.cout_total_materiaux', read_only=True)",
        "detail": "chantier.serializers",
        "documentation": {}
    },
    {
        "label": "MateriauTotalSerializer",
        "kind": 6,
        "importPath": "chantier.serializers",
        "description": "chantier.serializers",
        "peekOfCode": "class MateriauTotalSerializer(serializers.Serializer):\n    material_name = serializers.CharField()\n    material_type = serializers.CharField()\n    bon_commande_type =  serializers.CharField()\n    total_quantite = serializers.DecimalField(max_digits=10, decimal_places=2)\n    total_cout = serializers.DecimalField(max_digits=10, decimal_places=2)\n# class ChantierMateriauxCostSerializer(serializers.Serializer):\n#     chantier_name = serializers.CharField()\n#     total_materiaux_cost = serializers.DecimalField(max_digits=10, decimal_places=2)\n#     materiaux_cout = serializers.SerializerMethodField()",
        "detail": "chantier.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "chantier.urls",
        "description": "chantier.urls",
        "peekOfCode": "urlpatterns = [\n    path('chantier/<int:chantier_id>/bons-commande/', views.ChantierBonCommandeViewSet.as_view({'get': 'list'})),\n    path('bon-commande/<int:bon_commande_id>/', views.BonCommandeDetailView.as_view(), name='bon-commande-detail'),\n    path('bon-commande/<int:bon_commande_id>/materiaux/<int:materiau_id>/', views.MateriauBonCommandeDetailView.as_view(), name='materiau-bon-commande-detail'),\n    path('bon-commandes/<int:bon_commande_id>/materiaux/', views.add_materiau_to_bon_commande, name='add_materiau_to_bon_commande'),\n    path('bon-commandes/<int:bon_commande_id>/materiaux/<int:materiau_id>/', views.delete_materiau_from_bon_commande, name='delete_materiau_from_bon_commande'),\n    path('chantier/<int:chantier_id>/materiaux-cost/', views.ChantierMateriauxTotalsView.as_view(), name='chantier-materiaux-cost'),\n    path('chantier/<int:chantier_id>/totaux-materiaux/', views.ChantierMateriauxTotalsView.as_view(), name='chantier_materiaux_totaux'),\n    path('materiaux/<int:materiau_id>/options/', views.get_options_by_materiau, name='get_options_by_materiau'),\n    path('materiaux/<int:materiau_id>/add/options/', views.add_or_update_option, name='add_or_update_option'),",
        "detail": "chantier.urls",
        "documentation": {}
    },
    {
        "label": "get_default_partie",
        "kind": 2,
        "importPath": "chantier.utils",
        "description": "chantier.utils",
        "peekOfCode": "def get_default_partie():\n    # Returns a default PartieChantier instance or the first one\n    return PartieChantier.objects.first()",
        "detail": "chantier.utils",
        "documentation": {}
    },
    {
        "label": "ChantierViewSet",
        "kind": 6,
        "importPath": "chantier.views",
        "description": "chantier.views",
        "peekOfCode": "class ChantierViewSet(viewsets.ModelViewSet):\n    queryset = Chantier.objects.all()\n    serializer_class = ChantierSerializer\nclass OptionMateriauViewSet(viewsets.ModelViewSet):\n    queryset = OptionMateriau.objects.all()\n    serializer_class = OptionMateriauSerializer\n# Gestion des parties de chantier (gros œuvre et finition)\nclass PartieChantierViewSet(viewsets.ModelViewSet):\n    queryset = PartieChantier.objects.all()\n    serializer_class = PartieChantierSerializer",
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "OptionMateriauViewSet",
        "kind": 6,
        "importPath": "chantier.views",
        "description": "chantier.views",
        "peekOfCode": "class OptionMateriauViewSet(viewsets.ModelViewSet):\n    queryset = OptionMateriau.objects.all()\n    serializer_class = OptionMateriauSerializer\n# Gestion des parties de chantier (gros œuvre et finition)\nclass PartieChantierViewSet(viewsets.ModelViewSet):\n    queryset = PartieChantier.objects.all()\n    serializer_class = PartieChantierSerializer\n# Gestion des matériaux\nclass ListeMateriauxViewSet(viewsets.ModelViewSet):\n    queryset = ListeMateriaux.objects.all()",
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "PartieChantierViewSet",
        "kind": 6,
        "importPath": "chantier.views",
        "description": "chantier.views",
        "peekOfCode": "class PartieChantierViewSet(viewsets.ModelViewSet):\n    queryset = PartieChantier.objects.all()\n    serializer_class = PartieChantierSerializer\n# Gestion des matériaux\nclass ListeMateriauxViewSet(viewsets.ModelViewSet):\n    queryset = ListeMateriaux.objects.all()\n    serializer_class = ListeMateriauxSerializer\n    filter_backends = (DjangoFilterBackend,)\n    filterset_class = ListeMateriauxFilter \n    def create(self, request, *args, **kwargs):",
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "ListeMateriauxViewSet",
        "kind": 6,
        "importPath": "chantier.views",
        "description": "chantier.views",
        "peekOfCode": "class ListeMateriauxViewSet(viewsets.ModelViewSet):\n    queryset = ListeMateriaux.objects.all()\n    serializer_class = ListeMateriauxSerializer\n    filter_backends = (DjangoFilterBackend,)\n    filterset_class = ListeMateriauxFilter \n    def create(self, request, *args, **kwargs):\n        # Custom creation logic to handle options\n        return super().create(request, *args, **kwargs)\n    def update(self, request, *args, **kwargs):\n        # Custom update logic to handle options",
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "BonCommandeViewSet",
        "kind": 6,
        "importPath": "chantier.views",
        "description": "chantier.views",
        "peekOfCode": "class BonCommandeViewSet(viewsets.ModelViewSet):\n    queryset = BonCommande.objects.all()\n    serializer_class = BonCommandeSerializer\n    filter_backends = [DjangoFilterBackend]\n    filterset_class = BonCommandeFilter\n# Vue pour récupérer les bons de commande d'un chantier\nclass ChantierBonCommandeViewSet(viewsets.ViewSet):\n    def list(self, request, chantier_id=None):\n        chantier = get_object_or_404(Chantier, id=chantier_id)\n        bons_commande = BonCommande.objects.filter(partie__chantier=chantier)",
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "ChantierBonCommandeViewSet",
        "kind": 6,
        "importPath": "chantier.views",
        "description": "chantier.views",
        "peekOfCode": "class ChantierBonCommandeViewSet(viewsets.ViewSet):\n    def list(self, request, chantier_id=None):\n        chantier = get_object_or_404(Chantier, id=chantier_id)\n        bons_commande = BonCommande.objects.filter(partie__chantier=chantier)\n        serializer = BonCommandeSerializer(bons_commande, many=True)\n        return Response(serializer.data)\n# Vue pour les détails des bons de commande\nclass BonCommandeDetailView(APIView):\n    def get(self, request, bon_commande_id):\n        bon_commande = get_object_or_404(BonCommande, id=bon_commande_id)",
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "BonCommandeDetailView",
        "kind": 6,
        "importPath": "chantier.views",
        "description": "chantier.views",
        "peekOfCode": "class BonCommandeDetailView(APIView):\n    def get(self, request, bon_commande_id):\n        bon_commande = get_object_or_404(BonCommande, id=bon_commande_id)\n        serializer = BonCommandeSerializer(bon_commande)\n        return Response(serializer.data)\n    def put(self, request, bon_commande_id):\n        bon_commande = get_object_or_404(BonCommande, id=bon_commande_id)\n        serializer = BonCommandeSerializer(bon_commande, data=request.data, partial=True)\n        if serializer.is_valid():\n            serializer.save()",
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "ChantierMateriauxTotalsView",
        "kind": 6,
        "importPath": "chantier.views",
        "description": "chantier.views",
        "peekOfCode": "class ChantierMateriauxTotalsView(APIView):\n    def get(self, request, chantier_id, *args, **kwargs):\n        try:\n            # Récupérer le chantier\n            chantier = Chantier.objects.get(id=chantier_id)\n            # Calculer les totaux pour chaque matériau\n            materiaux_totaux = (\n                MateriauBonCommande.objects\n                .filter(bon_commande__partie__chantier=chantier)\n                .values(material_name=F('materiau__name'),material_type=F('materiau__type'),option_type=F('option__type'),",
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "MateriauBonCommandeDetailView",
        "kind": 6,
        "importPath": "chantier.views",
        "description": "chantier.views",
        "peekOfCode": "class MateriauBonCommandeDetailView(APIView):\n    def get(self, request, bon_commande_id, materiau_id):\n        bon_commande = get_object_or_404(BonCommande, id=bon_commande_id)\n        materiau_bon_commande = get_object_or_404(MateriauBonCommande, id=materiau_id, bon_commande=bon_commande)\n        serializer = MateriauBonCommandeSerializer(materiau_bon_commande)\n        return Response(serializer.data)\n    def put(self, request, bon_commande_id, materiau_id):\n        bon_commande = get_object_or_404(BonCommande, id=bon_commande_id)\n        materiau_bon_commande = get_object_or_404(MateriauBonCommande, id=materiau_id, bon_commande=bon_commande)\n        serializer = MateriauBonCommandeSerializer(materiau_bon_commande, data=request.data, partial=True)",
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "get_options_by_materiau",
        "kind": 2,
        "importPath": "chantier.views",
        "description": "chantier.views",
        "peekOfCode": "def get_options_by_materiau(request, materiau_id):\n    try:\n        # Récupérer le matériau à partir de son ID\n        materiau = ListeMateriaux.objects.get(id=materiau_id)\n    except ListeMateriaux.DoesNotExist:\n        return Response({'detail': 'Materiau not found.'}, status=status.HTTP_404_NOT_FOUND)\n    # Récupérer les options associées au matériau\n    options = materiau.options.all()\n    # Sérialiser les options\n    serializer = OptionMateriauSerializer(options, many=True)",
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "add_or_update_option",
        "kind": 2,
        "importPath": "chantier.views",
        "description": "chantier.views",
        "peekOfCode": "def add_or_update_option(request, materiau_id):\n    try:\n        materiau = ListeMateriaux.objects.get(id=materiau_id)\n    except ListeMateriaux.DoesNotExist:\n        return Response({\"detail\": \"Materiau not found\"}, status=status.HTTP_404_NOT_FOUND)\n    # Si c'est une requête POST, on ajoute une nouvelle option\n    if request.method == 'POST':\n        serializer = OptionMateriauSerializer(data=request.data)\n        if serializer.is_valid():\n            # Relier l'option au matériau avant de sauvegarder",
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "add_materiau_to_bon_commande",
        "kind": 2,
        "importPath": "chantier.views",
        "description": "chantier.views",
        "peekOfCode": "def add_materiau_to_bon_commande(request, bon_commande_id):\n    try:\n        bon_commande = get_object_or_404(BonCommande, id=bon_commande_id)\n        materiau_id = request.data.get('materiau_id')\n        quantite = request.data.get('quantite')\n        unite = request.data.get('unite')\n        prix_unitaire = request.data.get('prix_unitaire')\n        materiau = get_object_or_404(ListeMateriaux, id=materiau_id)\n        materiau_bon_commande = MateriauBonCommande.objects.create(\n            bon_commande=bon_commande,",
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "delete_materiau_from_bon_commande",
        "kind": 2,
        "importPath": "chantier.views",
        "description": "chantier.views",
        "peekOfCode": "def delete_materiau_from_bon_commande(request, bon_commande_id, materiau_id):\n    materiau_bon_commande = get_object_or_404(MateriauBonCommande, id=materiau_id)\n    materiau_bon_commande.delete()\n    return Response({\"message\": \"Matériau supprimé avec succès.\"}, status=status.HTTP_204_NO_CONTENT)",
        "detail": "chantier.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "chantier_backend.asgi",
        "description": "chantier_backend.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "chantier_backend.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-ayi5$ceiyzg%-wd1^l%fh10l23f+*k0rvs73x4_1mpbibm#c!='\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['*']\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:4200\",  # Origine de votre application Angular",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-ayi5$ceiyzg%-wd1^l%fh10l23f+*k0rvs73x4_1mpbibm#c!='\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['*']\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:4200\",  # Origine de votre application Angular\n]\nCORS_ALLOW_ALL_ORIGINS = True\n# Application definition\nINSTALLED_APPS = [",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = ['*']\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:4200\",  # Origine de votre application Angular\n]\nCORS_ALLOW_ALL_ORIGINS = True\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['*']\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:4200\",  # Origine de votre application Angular\n]\nCORS_ALLOW_ALL_ORIGINS = True\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    \"http://localhost:4200\",  # Origine de votre application Angular\n]\nCORS_ALLOW_ALL_ORIGINS = True\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_ALL_ORIGINS",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "CORS_ALLOW_ALL_ORIGINS = True\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'chantier',",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'chantier',\n    'rest_framework',\n    'django_filters',",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n]",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "ROOT_URLCONF = 'chantier_backend.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],\n}\nWSGI_APPLICATION = 'chantier_backend.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "WSGI_APPLICATION = 'chantier_backend.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "chantier_backend.settings",
        "description": "chantier_backend.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "chantier_backend.settings",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "chantier_backend.urls",
        "description": "chantier_backend.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'chantiers', ChantierViewSet)\nrouter.register(r'materiaux', ListeMateriauxViewSet)\nrouter.register(r'options', OptionMateriauViewSet)\nrouter.register(r'bons-commande', BonCommandeViewSet)\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include(router.urls)),\n    path('api/',include('chantier.urls')),\n    path('api/chantier/<int:chantier_id>/bons-commande/', ChantierBonCommandeViewSet.as_view({'get': 'list'})),",
        "detail": "chantier_backend.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "chantier_backend.urls",
        "description": "chantier_backend.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include(router.urls)),\n    path('api/',include('chantier.urls')),\n    path('api/chantier/<int:chantier_id>/bons-commande/', ChantierBonCommandeViewSet.as_view({'get': 'list'})),\n]",
        "detail": "chantier_backend.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "chantier_backend.wsgi",
        "description": "chantier_backend.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "chantier_backend.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'chantier_backend.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]